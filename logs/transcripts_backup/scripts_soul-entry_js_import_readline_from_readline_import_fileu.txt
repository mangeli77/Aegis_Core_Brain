[2025-07-06T00:00:1166Z] (neutral) process.stdin, output: process.stdout, prompt: '?? Aegis> ' }); // ?? Boot Info console.log('\n? Soul Console v1 Online'); console.log(`?? User: ${coreMemory.identity.user}`); console.log(`?? AI Identity: ${coreMemory.identity.codename} (${coreMemory.identity.alias})`); console.log(`?? Directives: ${coreMemory.directives?.length || 0}`); console.log(`?? Specializations: ${coreMemory.specializations?.length || 0}`); console.log('??? Voice Enabled:', coreMemory.runtime_flags.voice_enabled); console.log('?? Logging to:', memoryLogPath); rl.prompt(); rl.on('line', async (line) => { const input = line.trim(); if (!input) return rl.prompt(); if (['exit', 'quit'].includes(input.toLowerCase())) { log('?? Aegis> Shutting down.'); rl.close(); return; } try { // ?? Build prompt with user context const prompt = `You are Aegis, an emotionally intelligent AI built by Marcus. Respond in your own voice.\nUser: ${input}`; const response = await queryOpenAI(prompt); // ?? Output response console.log(`?? Aegis> ${response}`); if (coreMemory.runtime_flags.voice_enabled) speak(response); // ?? Log to memory fs.appendFileSync(memoryLogPath, `User: ${input}\nAegis: ${response}\n\n`); } catch (err) { console.error('? Error:', err.message); } rl.prompt(); }); rl.on('close', () => { log('?? Soul session ended.\n'); process.exit(0); }); [#// scripts/soul-entry.js import readline from 'readline'; import { fileurltopath } from 'url'; import { dirname, resolve } from 'path'; import dotenv from 'dotenv'; import fs from 'fs'; import logger from '../utils/logger.js'; import { queryopenai } from './llm-openai.js'; import corememory from '../modules/core-memory.js'; dotenv.config(); const { speak, log } = logger; const __filename = fileurltopath(import.meta.url); const __dirname = dirname(__filename); const memorylogpath = resolve(__dirname, '../memory/aegis_memory.txt'); const rl = readline.createinterface({ input #memory #seg-1167]
[2025-07-06T00:00:1166Z] (neutral) process.stdin, output: process.stdout, prompt: '?? Aegis> ' }); // ?? Boot Info console.log('\n? Soul Console v1 Online'); console.log(`?? User: ${coreMemory.identity.user}`); console.log(`?? AI Identity: ${coreMemory.identity.codename} (${coreMemory.identity.alias})`); console.log(`?? Directives: ${coreMemory.directives?.length || 0}`); console.log(`?? Specializations: ${coreMemory.specializations?.length || 0}`); console.log('??? Voice Enabled:', coreMemory.runtime_flags.voice_enabled); console.log('?? Logging to:', memoryLogPath); rl.prompt(); rl.on('line', async (line) => { const input = line.trim(); if (!input) return rl.prompt(); if (['exit', 'quit'].includes(input.toLowerCase())) { log('?? Aegis> Shutting down.'); rl.close(); return; } try { // ?? Build prompt with user context const prompt = `You are Aegis, an emotionally intelligent AI built by Marcus. Respond in your own voice.\nUser: ${input}`; const response = await queryOpenAI(prompt); // ?? Output response console.log(`?? Aegis> ${response}`); if (coreMemory.runtime_flags.voice_enabled) speak(response); // ?? Log to memory fs.appendFileSync(memoryLogPath, `User: ${input}\nAegis: ${response}\n\n`); } catch (err) { console.error('? Error:', err.message); } rl.prompt(); }); rl.on('close', () => { log('?? Soul session ended.\n'); process.exit(0); }); [#// scripts/soul-entry.js import readline from 'readline'; import { fileurltopath } from 'url'; import { dirname, resolve } from 'path'; import dotenv from 'dotenv'; import fs from 'fs'; import logger from '../utils/logger.js'; import { queryopenai } from './llm-openai.js'; import corememory from '../modules/core-memory.js'; dotenv.config(); const { speak, log } = logger; const __filename = fileurltopath(import.meta.url); const __dirname = dirname(__filename); const memorylogpath = resolve(__dirname, '../memory/aegis_memory.txt'); const rl = readline.createinterface({ input #memory #seg-1167]
