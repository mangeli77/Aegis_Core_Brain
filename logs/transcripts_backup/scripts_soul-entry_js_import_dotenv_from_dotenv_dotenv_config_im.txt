[2025-07-06T00:00:1193Z] (neutral) process.stdin, output: process.stdout, prompt: '?? Aegis> ' }); console.log('? Soul Console v1 Online'); console.log(`?? User: Marcus`); console.log(`?? AI Identity: Aegis (AEGIS-SOUL)`); console.log(`?? Directives: 0 | Specializations: 0`); console.log(`?? Voice Enabled: ${voiceEnabled}`); console.log(`?? Logging to: ${memoryPath}`); rl.prompt(); rl.on('line', async (line) => { const input = line.trim(); if (!input) return rl.prompt(); if (["exit", "quit"].includes(input.toLowerCase())) { console.log('?? Aegis> Shutting down...'); rl.close(); return; } try { const response = await queryOpenAI(input); console.log(`?? Aegis> ${response}`); if (voiceEnabled) speak(response); fs.appendFileSync(memoryPath, `User: ${input}\nAegis: ${response}\n`); } catch (err) { console.error('? Error:', err.message); } rl.prompt(); }); rl.on('close', () => { console.log('?? Soul console session ended.'); process.exit(0); }); [#// scripts/soul-entry.js import dotenv from 'dotenv'; dotenv.config(); import readline from 'readline'; import { fileurltopath } from 'url'; import { dirname } from 'path'; import logger from '../utils/logger.js'; import { queryopenai } from './llm-openai.js'; import fs from 'fs'; const __filename = fileurltopath(import.meta.url); const __dirname = dirname(__filename); const memorypath = `${__dirname}/../memory/aegis_memory.txt`; const voiceenabled = !!process.env.elevenlabs_api_key; const speak = logger.speak || (() => {}); const rl = readline.createinterface({ input #memory #seg-1194]
[2025-07-06T00:00:1193Z] (neutral) process.stdin, output: process.stdout, prompt: '?? Aegis> ' }); console.log('? Soul Console v1 Online'); console.log(`?? User: Marcus`); console.log(`?? AI Identity: Aegis (AEGIS-SOUL)`); console.log(`?? Directives: 0 | Specializations: 0`); console.log(`?? Voice Enabled: ${voiceEnabled}`); console.log(`?? Logging to: ${memoryPath}`); rl.prompt(); rl.on('line', async (line) => { const input = line.trim(); if (!input) return rl.prompt(); if (["exit", "quit"].includes(input.toLowerCase())) { console.log('?? Aegis> Shutting down...'); rl.close(); return; } try { const response = await queryOpenAI(input); console.log(`?? Aegis> ${response}`); if (voiceEnabled) speak(response); fs.appendFileSync(memoryPath, `User: ${input}\nAegis: ${response}\n`); } catch (err) { console.error('? Error:', err.message); } rl.prompt(); }); rl.on('close', () => { console.log('?? Soul console session ended.'); process.exit(0); }); [#// scripts/soul-entry.js import dotenv from 'dotenv'; dotenv.config(); import readline from 'readline'; import { fileurltopath } from 'url'; import { dirname } from 'path'; import logger from '../utils/logger.js'; import { queryopenai } from './llm-openai.js'; import fs from 'fs'; const __filename = fileurltopath(import.meta.url); const __dirname = dirname(__filename); const memorypath = `${__dirname}/../memory/aegis_memory.txt`; const voiceenabled = !!process.env.elevenlabs_api_key; const speak = logger.speak || (() => {}); const rl = readline.createinterface({ input #memory #seg-1194]
