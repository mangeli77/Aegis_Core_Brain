[2025-07-06T00:00:2012Z] (neutral)  [#? here's the newêvoice-diagnostic.pyêscript #seg-2013]
[2025-07-06T00:00:2012Z] (neutral)  [#please place this file underêscripts/voice-diagnostic.py #seg-2013]
[2025-07-06T00:00:2012Z] (neutral) spec = importlib.util.find_spec(name) return spec is not None def check_model_path(): model_path = "/Users/Aegis/Public/Drop Box/vosk-model-en-us-0.22" return os.path.isdir(model_path) def check_python_file(path): return os.path.isfile(path) print("\n=== ?? AEGIS PYTHON DIAGNOSTIC ===\n") # 1. Microphone Test print(f"??? Mic Available: ", end="") try: devices = sd.query_devices() if devices: print("? Found") else: print("? No devices listed") except Exception as e: print(f"? Error: {e}") # 2. Vosk Model Path print(f"?? Vosk Model Directory: ", end="") if check_model_path(): print("? Found") else: print("? Missing") # 3. speechbrain_core.py print(f"?? speechbrain_core.py Exists: ", end="") if check_python_file("scripts/speechbrain_core.py"): print("? Yes") else: print("? No") # 4. Dependency Checks for module in ["numpy", "torch", "speechbrain", "soundfile"]: print(f"?? {module}: ", end="") if check_module(module): print("?") else: print("?") print("\n?? Diagnostic Complete.\n") [## scripts/voice-diagnostic.py import os import importlib.util import sounddevice as sd import sys def check_module(name) #seg-2013]
[2025-07-06T00:00:2012Z] (neutral)  [#? here's the newêvoice-diagnostic.pyêscript #seg-2013]
[2025-07-06T00:00:2012Z] (neutral)  [#please place this file underêscripts/voice-diagnostic.py #seg-2013]
[2025-07-06T00:00:2012Z] (neutral) spec = importlib.util.find_spec(name) return spec is not None def check_model_path(): model_path = "/Users/Aegis/Public/Drop Box/vosk-model-en-us-0.22" return os.path.isdir(model_path) def check_python_file(path): return os.path.isfile(path) print("\n=== ?? AEGIS PYTHON DIAGNOSTIC ===\n") # 1. Microphone Test print(f"??? Mic Available: ", end="") try: devices = sd.query_devices() if devices: print("? Found") else: print("? No devices listed") except Exception as e: print(f"? Error: {e}") # 2. Vosk Model Path print(f"?? Vosk Model Directory: ", end="") if check_model_path(): print("? Found") else: print("? Missing") # 3. speechbrain_core.py print(f"?? speechbrain_core.py Exists: ", end="") if check_python_file("scripts/speechbrain_core.py"): print("? Yes") else: print("? No") # 4. Dependency Checks for module in ["numpy", "torch", "speechbrain", "soundfile"]: print(f"?? {module}: ", end="") if check_module(module): print("?") else: print("?") print("\n?? Diagnostic Complete.\n") [## scripts/voice-diagnostic.py import os import importlib.util import sounddevice as sd import sys def check_module(name) #seg-2013]
[2025-07-06T00:00:2012Z] (neutral)  [#? here's the newêvoice-diagnostic.pyêscript #seg-2013]
[2025-07-06T00:00:2012Z] (neutral)  [#please place this file underêscripts/voice-diagnostic.py #seg-2013]
[2025-07-06T00:00:2012Z] (neutral) spec = importlib.util.find_spec(name) return spec is not None def check_model_path(): model_path = "/Users/Aegis/Public/Drop Box/vosk-model-en-us-0.22" return os.path.isdir(model_path) def check_python_file(path): return os.path.isfile(path) print("\n=== ?? AEGIS PYTHON DIAGNOSTIC ===\n") # 1. Microphone Test print(f"??? Mic Available: ", end="") try: devices = sd.query_devices() if devices: print("? Found") else: print("? No devices listed") except Exception as e: print(f"? Error: {e}") # 2. Vosk Model Path print(f"?? Vosk Model Directory: ", end="") if check_model_path(): print("? Found") else: print("? Missing") # 3. speechbrain_core.py print(f"?? speechbrain_core.py Exists: ", end="") if check_python_file("scripts/speechbrain_core.py"): print("? Yes") else: print("? No") # 4. Dependency Checks for module in ["numpy", "torch", "speechbrain", "soundfile"]: print(f"?? {module}: ", end="") if check_module(module): print("?") else: print("?") print("\n?? Diagnostic Complete.\n") [## scripts/voice-diagnostic.py import os import importlib.util import sounddevice as sd import sys def check_module(name) #seg-2013]
