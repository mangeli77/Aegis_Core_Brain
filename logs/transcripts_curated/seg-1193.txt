[2025-07-06T00:00:1192Z] (neutral) ?Êscripts/soul-console.js [#system #seg-1193]
[2025-07-06T00:00:1192Z] (neutral) ?Êscripts/soul-console.js [#system #seg-1193]
[2025-07-06T00:00:1192Z] (neutral) process.stdin, output: process.stdout, prompt: '?? Aegis> ' }); console.log('? Soul Console v1 Online.'); console.log('?? User: Marcus'); console.log('?? AI Identity: Aegis (AEGISÐSOUL)'); console.log('?? Directives: 0'); console.log('?? Specializations: 0'); console.log(`?? Voice Enabled: ${process.env.ELEVENLABS_API_KEY ? 'true' : 'false'}`); console.log(`?? Logging to: ${__dirname}/../memory/aegis_memory.txt`); rl.prompt(); rl.on('line', async (line) => { const input = line.trim(); if (!input) { rl.prompt(); return; } if (['exit', 'quit'].includes(input.toLowerCase())) { console.log('?? Aegis> Shutting down soul-console...'); rl.close(); return; } try { const response = await queryOpenAI(input); console.log(`?? Aegis> ${response}`); speak(response); } catch (err) { console.error('? Error generating response:', err.message); } rl.prompt(); }); rl.on('close', () => { console.log('?? Soul console session ended.'); process.exit(0); }); [#// scripts/soul-console.js import readline from 'readline'; import { fileurltopath } from 'url'; import { dirname } from 'path'; import { queryopenai } from './llm-openai.js'; import { log, speak } from '../utils/logger.js'; const __filename = fileurltopath(import.meta.url); const __dirname = dirname(__filename); const rl = readline.createinterface({ input #memory #seg-1193]
[2025-07-06T00:00:1192Z] (neutral) ?Êscripts/soul-console.js [#system #seg-1193]
[2025-07-06T00:00:1192Z] (neutral) process.stdin, output: process.stdout, prompt: '?? Aegis> ' }); console.log('? Soul Console v1 Online.'); console.log('?? User: Marcus'); console.log('?? AI Identity: Aegis (AEGISÐSOUL)'); console.log('?? Directives: 0'); console.log('?? Specializations: 0'); console.log(`?? Voice Enabled: ${process.env.ELEVENLABS_API_KEY ? 'true' : 'false'}`); console.log(`?? Logging to: ${__dirname}/../memory/aegis_memory.txt`); rl.prompt(); rl.on('line', async (line) => { const input = line.trim(); if (!input) { rl.prompt(); return; } if (['exit', 'quit'].includes(input.toLowerCase())) { console.log('?? Aegis> Shutting down soul-console...'); rl.close(); return; } try { const response = await queryOpenAI(input); console.log(`?? Aegis> ${response}`); speak(response); } catch (err) { console.error('? Error generating response:', err.message); } rl.prompt(); }); rl.on('close', () => { console.log('?? Soul console session ended.'); process.exit(0); }); [#// scripts/soul-console.js import readline from 'readline'; import { fileurltopath } from 'url'; import { dirname } from 'path'; import { queryopenai } from './llm-openai.js'; import { log, speak } from '../utils/logger.js'; const __filename = fileurltopath(import.meta.url); const __dirname = dirname(__filename); const rl = readline.createinterface({ input #memory #seg-1193]
