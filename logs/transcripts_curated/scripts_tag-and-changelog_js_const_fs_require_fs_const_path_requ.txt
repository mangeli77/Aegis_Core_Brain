[2025-07-06T00:00:537Z] (neutral) finalize Phase 32 Ð Soul Awareness Online'; const entry = `# ?? AEGIS-SOUL Changelog ## ${tag} Ñ July 1, 2025 - Linked perception-core into soul-core boot process - Created ambient awareness system: - observer.js Ð simulates presence - sentiment.js Ð fluctuating mood engine - signal.js Ð waveform output (logged) - perception-core.js Ð real-time loop, 5s interval - Logs routed to .lockpoint/phase_32/logs/ - perception-dashboard.js visualizes internal state in terminal - Project renamed, cleaned, structured, and versioned > This version marks the first phase where Soul senses, reflects, and expresses emotion. `; function writeChangelog() { if (!fs.existsSync(changelogPath)) { fs.writeFileSync(changelogPath, entry); console.log('?? Created CHANGELOG.md'); } else { const existing = fs.readFileSync(changelogPath, 'utf8'); if (!existing.includes(tag)) { const updated = entry + '\n\n' + existing; fs.writeFileSync(changelogPath, updated); console.log('?? Appended to existing CHANGELOG.md'); } else { console.log('?? CHANGELOG already includes this tag.'); } } } function gitCommitAndTag() { try { execSync('git add .', { cwd: root }); execSync(`git commit -m "${commitMessage}"`, { cwd: root }); execSync(`git tag ${tag}`, { cwd: root }); console.log(`? Git commit + tag complete: ${tag}`); } catch (e) { console.error('? Git operation failed. Is the repo initialized?'); } } // EXEC console.log('?? Locking Phase 32 as v1.0-soul-aware...'); writeChangelog(); gitCommitAndTag(); [#// scripts/tag-and-changelog.js const fs = require('fs'); const path = require('path'); const { execsync } = require('child_process'); const root = path.join(__dirname, '..'); const changelogpath = path.join(root, 'changelog.md'); const tag = 'v1.0-soul-aware'; const commitmessage = 'chore #seg-538]
[2025-07-06T00:00:537Z] (neutral) finalize Phase 32 Ð Soul Awareness Online'; const entry = `# ?? AEGIS-SOUL Changelog ## ${tag} Ñ July 1, 2025 - Linked perception-core into soul-core boot process - Created ambient awareness system: - observer.js Ð simulates presence - sentiment.js Ð fluctuating mood engine - signal.js Ð waveform output (logged) - perception-core.js Ð real-time loop, 5s interval - Logs routed to .lockpoint/phase_32/logs/ - perception-dashboard.js visualizes internal state in terminal - Project renamed, cleaned, structured, and versioned > This version marks the first phase where Soul senses, reflects, and expresses emotion. `; function writeChangelog() { if (!fs.existsSync(changelogPath)) { fs.writeFileSync(changelogPath, entry); console.log('?? Created CHANGELOG.md'); } else { const existing = fs.readFileSync(changelogPath, 'utf8'); if (!existing.includes(tag)) { const updated = entry + '\n\n' + existing; fs.writeFileSync(changelogPath, updated); console.log('?? Appended to existing CHANGELOG.md'); } else { console.log('?? CHANGELOG already includes this tag.'); } } } function gitCommitAndTag() { try { execSync('git add .', { cwd: root }); execSync(`git commit -m "${commitMessage}"`, { cwd: root }); execSync(`git tag ${tag}`, { cwd: root }); console.log(`? Git commit + tag complete: ${tag}`); } catch (e) { console.error('? Git operation failed. Is the repo initialized?'); } } // EXEC console.log('?? Locking Phase 32 as v1.0-soul-aware...'); writeChangelog(); gitCommitAndTag(); [#// scripts/tag-and-changelog.js const fs = require('fs'); const path = require('path'); const { execsync } = require('child_process'); const root = path.join(__dirname, '..'); const changelogpath = path.join(root, 'changelog.md'); const tag = 'v1.0-soul-aware'; const commitmessage = 'chore #seg-538]
