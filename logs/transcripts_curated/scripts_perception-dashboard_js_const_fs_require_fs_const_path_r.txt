[2025-07-06T00:00:505Z] (neutral) : Perception Dashboard'); console.log('?????????????????????????????????????\n'); console.log(formatLine(lastPerceptionLine, 'Perception', '36')); // Cyan console.log(formatLine(lastVisualLine, 'Visual', '35')); // Magenta console.log('\n?? Updating every 1s...\n'); } setInterval(() => { tailLog(perceptionLog, line => { if (line) lastPerceptionLine = line; renderDashboard(); }); tailLog(visualLog, line => { if (line) lastVisualLine = line; }); }, 1000); [#// scripts/perception-dashboard.js const fs = require('fs'); const path = require('path'); const perceptionlog = path.join(__dirname, '..', '.lockpoint', 'phase_32', 'logs', 'perception.log'); const visuallog = path.join(__dirname, '..', '.lockpoint', 'phase_32', 'logs', 'visual.log'); let lastperceptionline = ''; let lastvisualline = ''; function taillog(filepath, callback) { fs.readfile(filepath, 'utf8', (err, data) => { if (err) return; const lines = data.trim().split('\n'); callback(lines[lines.length - 1]); }); } function formatline(line, label, colorcode) { return `\x1b[${colorcode}m${label.padend(10)}\x1b[0m ${line}`; } function renderdashboard() { console.clear(); console.log('?? aegis-soul #seg-506]
[2025-07-06T00:00:505Z] (neutral) : Perception Dashboard'); console.log('?????????????????????????????????????\n'); console.log(formatLine(lastPerceptionLine, 'Perception', '36')); // Cyan console.log(formatLine(lastVisualLine, 'Visual', '35')); // Magenta console.log('\n?? Updating every 1s...\n'); } setInterval(() => { tailLog(perceptionLog, line => { if (line) lastPerceptionLine = line; renderDashboard(); }); tailLog(visualLog, line => { if (line) lastVisualLine = line; }); }, 1000); [#// scripts/perception-dashboard.js const fs = require('fs'); const path = require('path'); const perceptionlog = path.join(__dirname, '..', '.lockpoint', 'phase_32', 'logs', 'perception.log'); const visuallog = path.join(__dirname, '..', '.lockpoint', 'phase_32', 'logs', 'visual.log'); let lastperceptionline = ''; let lastvisualline = ''; function taillog(filepath, callback) { fs.readfile(filepath, 'utf8', (err, data) => { if (err) return; const lines = data.trim().split('\n'); callback(lines[lines.length - 1]); }); } function formatline(line, label, colorcode) { return `\x1b[${colorcode}m${label.padend(10)}\x1b[0m ${line}`; } function renderdashboard() { console.clear(); console.log('?? aegis-soul #seg-506]
