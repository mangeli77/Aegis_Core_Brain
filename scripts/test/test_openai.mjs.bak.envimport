import '../../_env.mjs';
// scripts/test/test_openai.mjs

import path from 'path'
import dotenv from 'dotenv'
import { fileURLToPath } from 'url'
import OpenAI from 'openai'
import process from 'process'

// Force-load `.env` from project root
const __filename = fileURLToPath(import.meta.url)
const __dirname = path.dirname(__filename)
const projectRoot = path.resolve(__dirname, '../../')
dotenv.config({ path: path.join(projectRoot, '.env') })

// USE your original env variable name
const key = process.env.OPENAI_KEY || process.env.OPENAI_API_KEY || process.env['OPENAI_API_KEY']
if (!key) {
  console.error('\n❌ OPENAI_KEY not loaded. Check .env key name and syntax.\n')
  process.exit(1)
} else {
  console.log('✅ OPENAI_KEY loaded. First 20 chars:', key.slice(0, 20), '...\n')
}

// Init and call OpenAI
const openai = new OpenAI({ apiKey: key })

try {
  const response = await openai.chat.completions.create({
    model: 'gpt-4',
    messages: [{ role: 'user', content: 'Say hello from Aegis.' }],
  })

  console.log('\n✅ OpenAI Success:\n', response.choices[0].message.content)
} catch (err) {
  console.error('\n❌ OpenAI Error:\n', err.response?.data || err.message || err)
}